{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAU,SAAS,sBAAsB,CAAC,UAC1C,EAAkB,SAAS,cAAc,CAAC,qBAE1C,EAAe,WAEnB,MAAM,sBACR,EAEA,EAAgB,gBAAgB,CAAC,QAAS,WAExC,MAAM,qDACR,GAEK,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAgB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAhB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACI,gBAAgB,CAAC,QAAS,E,C,M,E,CAD9B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIL,IAAM,EAAa,SAAS,aAAa,CAAC,eACpC,EAAc,SAAS,aAAa,CAAC,gBAE3C,EAAW,gBAAgB,CAAC,QAAS,WACnC,EAAY,SAAS,CAAC,MAAM,CAAC,cAC7B,EAAY,SAAS,CAAC,GAAG,CAAC,cAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,aAC3B,GAEA,EAAY,gBAAgB,CAAC,QAAS,WACpC,EAAW,SAAS,CAAC,MAAM,CAAC,cAC5B,EAAY,SAAS,CAAC,MAAM,CAAC,cAC7B,EAAY,SAAS,CAAC,GAAG,CAAC,aAC5B,GAGA,IAAM,EAAW,IAAI,qBAAqB,SAAC,CAA3C,EACE,EAAQ,OAAO,CAAC,SAAC,CAAjB,EACM,EAAM,cAAc,GACtB,EAAM,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,QAE3B,WAAW,WACT,EAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,SAChC,EAAG,KAEP,EACF,GAEM,EAAiB,SAAS,gBAAgB,CAAC,WAC3C,EAAqB,SAAS,gBAAgB,CAAC,gBAC/C,EAAsB,SAAS,gBAAgB,CAAC,iBAMtD,AALkB,EAAI,GAAgB,MAAM,CACzC,EAAG,GACH,EAAG,IAGI,OAAO,CAAC,SAAC,CAAnB,EAA0B,OAAA,EAAS,OAAO,CAAC,E,GAE3C,IAAM,EAAkB,SAAS,aAAa,CAAC,wBAE/C,SAAS,gBAAgB,CAAC,SAAU,WAC9B,OAAO,OAAO,CAAG,IACnB,EAAgB,SAAS,CAAC,MAAM,CAAC,QAEjC,EAAgB,SAAS,CAAC,GAAG,CAAC,OAElC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar buttons = document.getElementsByClassName(\"button\");\nvar subscribeButton = document.getElementById(\"subscribe__button\");\nvar clickHandler = function clickHandler() {\n    // eslint-disable-next-line no-undef\n    alert(\"This button in work\");\n};\nsubscribeButton.addEventListener(\"click\", function() {\n    // eslint-disable-next-line no-undef\n    alert(\"You have successfully subscribed to our newsletter\");\n});\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = buttons[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var button = _step.value;\n        button.addEventListener(\"click\", clickHandler);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar menuButton = document.querySelector(\"#icon--menu\");\nvar closeButton = document.querySelector(\"#icon--close\");\nmenuButton.addEventListener(\"click\", function() {\n    closeButton.classList.remove(\"icon--hide\");\n    closeButton.classList.add(\"icon--show\");\n    menuButton.classList.add(\"icon--hide\");\n});\ncloseButton.addEventListener(\"click\", function() {\n    menuButton.classList.remove(\"icon--hide\");\n    closeButton.classList.remove(\"icon--show\");\n    closeButton.classList.add(\"icon--hide\");\n});\n// eslint-disable-next-line no-undef\nvar observer = new IntersectionObserver(function(entries) {\n    entries.forEach(function(entry) {\n        if (entry.isIntersecting) {\n            entry.target.classList.add(\"show\");\n            setTimeout(function() {\n                entry.target.classList.remove(\"hidden\");\n            }, 3000);\n        }\n    });\n});\nvar hiddenElements = document.querySelectorAll(\".hidden\");\nvar hiddenElementsLeft = document.querySelectorAll(\".hidden-left\");\nvar hiddenElementsRight = document.querySelectorAll(\".hidden-right\");\nvar allHidden = _to_consumable_array(hiddenElements).concat(_to_consumable_array(hiddenElementsLeft), _to_consumable_array(hiddenElementsRight));\nallHidden.forEach(function(el) {\n    return observer.observe(el);\n});\nvar backToTopButton = document.querySelector(\".button__back-to-top\");\ndocument.addEventListener(\"scroll\", function() {\n    if (window.scrollY > 1000) backToTopButton.classList.remove(\"hide\");\n    else backToTopButton.classList.add(\"hide\");\n});\n\n//# sourceMappingURL=index.c6e26767.js.map\n","'use strict';\n\nconst buttons = document.getElementsByClassName('button');\nconst subscribeButton = document.getElementById('subscribe__button');\n\nconst clickHandler = function() {\n  // eslint-disable-next-line no-undef\n  alert('This button in work');\n};\n\nsubscribeButton.addEventListener('click', () => {\n  // eslint-disable-next-line no-undef\n  alert('You have successfully subscribed to our newsletter');\n});\n\nfor (const button of buttons) {\n  button.addEventListener('click', clickHandler);\n}\n\nconst menuButton = document.querySelector('#icon--menu');\nconst closeButton = document.querySelector('#icon--close');\n\nmenuButton.addEventListener('click', () => {\n  closeButton.classList.remove('icon--hide');\n  closeButton.classList.add('icon--show');\n  menuButton.classList.add('icon--hide');\n});\n\ncloseButton.addEventListener('click', () => {\n  menuButton.classList.remove('icon--hide');\n  closeButton.classList.remove('icon--show');\n  closeButton.classList.add('icon--hide');\n});\n\n// eslint-disable-next-line no-undef\nconst observer = new IntersectionObserver((entries) => {\n  entries.forEach((entry) => {\n    if (entry.isIntersecting) {\n      entry.target.classList.add('show');\n\n      setTimeout(() => {\n        entry.target.classList.remove('hidden');\n      }, 3000);\n    }\n  });\n});\n\nconst hiddenElements = document.querySelectorAll('.hidden');\nconst hiddenElementsLeft = document.querySelectorAll('.hidden-left');\nconst hiddenElementsRight = document.querySelectorAll('.hidden-right');\nconst allHidden = [...hiddenElements].concat(\n  [...hiddenElementsLeft],\n  [...hiddenElementsRight],\n);\n\nallHidden.forEach((el) => observer.observe(el));\n\nconst backToTopButton = document.querySelector('.button__back-to-top');\n\ndocument.addEventListener('scroll', () => {\n  if (window.scrollY > 1000) {\n    backToTopButton.classList.remove('hide');\n  } else {\n    backToTopButton.classList.add('hide');\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","buttons","document","getElementsByClassName","subscribeButton","getElementById","clickHandler","alert","addEventListener","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","button","value","err","return","menuButton","querySelector","closeButton","classList","remove","add","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","setTimeout","hiddenElements","querySelectorAll","hiddenElementsLeft","hiddenElementsRight","allHidden","concat","el","observe","backToTopButton","window","scrollY"],"version":3,"file":"index.c6e26767.js.map"}